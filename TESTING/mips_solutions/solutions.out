
$$$ TEST 1, LINE 1: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 4
sw $s0, 0($sp)

$$$ TEST 2, LINE 3: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	li $t0,2
	li $t1,3
	add $t2,$t0,$t1

$$$ TEST 3, LINE 5: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)

$$$ TEST 4, LINE 7: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 24
sw $s0, 0($sp)
	li $t0,53
	sw $t0,x
	lw $t1,x
	li $t2,1
	add $t3,$t1,$t2

$$$ TEST 5, LINE 9: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 24
sw $s0, 0($sp)
	li $t0,1
	sw $t0,x
	lw $t1,x
	li $t2,32
	add $t3,$t1,$t2
	sw $t3,x

$$$ TEST 6, LINE 11: $$$


third:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 40
sw $s0, 0($sp)
	li $t0,3
	sw $t0,d
	lw $t1,a
	lw $t2,b
	add $t3,$t1,$t2
	lw $t4,c
	add $t5,$t3,$t4
	lw $t6,d
	add $t7,$t5,$t6
	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 12
sw $s0, 0($sp)

	move $s0, $ra
	jal first
	move $ra, $s0


first:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 20
sw $s0, 0($sp)
	li $t0,1
	sw $t0,b

	move $s0, $ra
	jal second
	move $ra, $s0


second:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	li $t0,2
	sw $t0,c

	move $s0, $ra
	jal third
	move $ra, $s0


$$$ TEST 7, LINE 13: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)

	move $s0, $ra
	jal first
	move $ra, $s0


first:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 20
sw $s0, 0($sp)
	li $t0,1
	sw $t0,b

	move $s0, $ra
	jal second
	move $ra, $s0


third:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 40
sw $s0, 0($sp)
	li $t0,3
	sw $t0,d
	lw $t1,a
	lw $t2,b
	add $t3,$t1,$t2
	lw $t4,c
	add $t5,$t3,$t4
	lw $t6,d
	add $t7,$t5,$t6

second:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	li $t0,2
	sw $t0,c

	move $s0, $ra
	jal third
	move $ra, $s0


$$$ TEST 8, LINE 15: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 12
sw $s0, 0($sp)

	move $s0, $ra
	jal func
	move $ra, $s0


func:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1

$$$ TEST 9, LINE 17: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)

	move $s0, $ra
	jal func
	move $ra, $s0


sum:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1

func:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	lw $t0,c
	lw $t1,d
	add $t2,$t0,$t1

$$$ TEST 10, LINE 19: $$$

	.globl main
	.text
main:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)

	move $s0, $ra
	jal func
	move $ra, $s0


sum:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1

func:
# Push the current Activation Record/Frame into stack

# Register $s0 is temporarely used for storing $ra
sub $sp, $sp, 16
sw $s0, 0($sp)
	lw $t0,c
	lw $t1,d
	add $t2,$t0,$t1
