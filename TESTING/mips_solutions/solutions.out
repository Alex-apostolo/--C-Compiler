
$$$ TEST 1, LINE 1: $$$

	.data

	.text
	.globl main

main:
	li $a0,53
	li $v0,17
	syscall

$$$ TEST 2, LINE 3: $$$

	.data

	.text
	.globl main

main:
	li $t0,2
	li $t1,3
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall

$$$ TEST 3, LINE 5: $$$

	.data

	.text
	.globl main

main:
	li $a0,15
	li $v0,17
	syscall

$$$ TEST 4, LINE 7: $$$

	.data

	.text
	.globl main

main:
	li $t0,53
	sw $t0,x
	lw $t1,x
	li $t2,1
	add $t3,$t1,$t2
	move $a0,$t3
	li $v0,17
	syscall

$$$ TEST 5, LINE 9: $$$

	.data

	.text
	.globl main

main:
	li $t0,1
	sw $t0,x
	lw $t1,x
	li $t2,32
	add $t3,$t1,$t2
	sw $t3,x

$$$ TEST 6, LINE 11: $$$

	.data
a: .word 2

	.text
	.globl main

third:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 40
	sw $s0, 0($sp)
	sw d, 4($sp)
	sw $t0, 8($sp)
	sw $t1, 12($sp)
	sw $t2, 16($sp)
	sw $t3, 20($sp)
	sw $t4, 24($sp)
	sw $t5, 28($sp)
	sw $t6, 32($sp)
	sw $t7, 36($sp)

	# Function Body starts here
	li $t0,3
	sw $t0,d
	lw $t1,a
	lw $t2,b
	add $t3,$t1,$t2
	lw $t4,c
	add $t5,$t3,$t4
	lw $t6,d
	add $t7,$t5,$t6
	move $a0,$t7
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw 4($sp), d
	lw $t0, 8($sp)
	lw $t1, 12($sp)
	lw $t2, 16($sp)
	lw $t3, 20($sp)
	lw $t4, 24($sp)
	lw $t5, 28($sp)
	lw $t6, 32($sp)
	lw $t7, 36($sp)
	add $sp, $sp, 40

main:

	move $s0, $ra
	jal first
	move $ra, $s0

	move $a0,$t0
	li $v0,17
	syscall

first:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 20
	sw $s0, 0($sp)
	sw b, 4($sp)
	sw second, 8($sp)
	sw $t0, 12($sp)
	sw $t1, 16($sp)

	# Function Body starts here
	li $t0,1
	sw $t0,b

	move $s0, $ra
	jal second
	move $ra, $s0

	move $a0,$t1
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw 4($sp), b
	lw 8($sp), second
	lw $t0, 12($sp)
	lw $t1, 16($sp)
	add $sp, $sp, 20

second:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw c, 4($sp)
	sw $t0, 8($sp)
	sw $t1, 12($sp)

	# Function Body starts here
	li $t0,2
	sw $t0,c

	move $s0, $ra
	jal third
	move $ra, $s0


$$$ TEST 7, LINE 13: $$$

	.data
a: .word 2

	.text
	.globl main

main:

	move $s0, $ra
	jal first
	move $ra, $s0

	move $a0,$t0
	li $v0,17
	syscall

first:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 20
	sw $s0, 0($sp)
	sw b, 4($sp)
	sw second, 8($sp)
	sw $t0, 12($sp)
	sw $t1, 16($sp)

	# Function Body starts here
	li $t0,1
	sw $t0,b

	move $s0, $ra
	jal second
	move $ra, $s0

	move $a0,$t1
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw 4($sp), b
	lw 8($sp), second
	lw $t0, 12($sp)
	lw $t1, 16($sp)
	add $sp, $sp, 20

third:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 40
	sw $s0, 0($sp)
	sw d, 4($sp)
	sw $t0, 8($sp)
	sw $t1, 12($sp)
	sw $t2, 16($sp)
	sw $t3, 20($sp)
	sw $t4, 24($sp)
	sw $t5, 28($sp)
	sw $t6, 32($sp)
	sw $t7, 36($sp)

	# Function Body starts here
	li $t0,3
	sw $t0,d
	lw $t1,a
	lw $t2,b
	add $t3,$t1,$t2
	lw $t4,c
	add $t5,$t3,$t4
	lw $t6,d
	add $t7,$t5,$t6
	move $a0,$t7
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw 4($sp), d
	lw $t0, 8($sp)
	lw $t1, 12($sp)
	lw $t2, 16($sp)
	lw $t3, 20($sp)
	lw $t4, 24($sp)
	lw $t5, 28($sp)
	lw $t6, 32($sp)
	lw $t7, 36($sp)
	add $sp, $sp, 40

second:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw c, 4($sp)
	sw $t0, 8($sp)
	sw $t1, 12($sp)

	# Function Body starts here
	li $t0,2
	sw $t0,c

	move $s0, $ra
	jal third
	move $ra, $s0


$$$ TEST 8, LINE 15: $$$

	.data

	.text
	.globl main

main:

	move $s0, $ra
	jal func
	move $ra, $s0

	move $a0,$t0
	li $v0,17
	syscall

func:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw $t0, 4($sp)
	sw $t1, 8($sp)
	sw $t2, 12($sp)

	# Function Body starts here
	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	add $sp, $sp, 16

$$$ TEST 9, LINE 17: $$$

	.data

	.text
	.globl main

main:

	move $s0, $ra
	jal func
	move $ra, $s0

	move $a0,$t0
	li $v0,17
	syscall

sum:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw $t0, 4($sp)
	sw $t1, 8($sp)
	sw $t2, 12($sp)

	# Function Body starts here
	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	add $sp, $sp, 16

func:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw $t0, 4($sp)
	sw $t1, 8($sp)
	sw $t2, 12($sp)

	# Function Body starts here
	lw $t0,c
	lw $t1,d
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	add $sp, $sp, 16

$$$ TEST 10, LINE 19: $$$

	.data

	.text
	.globl main

main:

	move $s0, $ra
	jal func
	move $ra, $s0

	move $a0,$t0
	li $v0,17
	syscall

sum:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw $t0, 4($sp)
	sw $t1, 8($sp)
	sw $t2, 12($sp)

	# Function Body starts here
	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	add $sp, $sp, 16

func:
	# Push Caller Activation Record to stack
	# $s0 temporary storage for $ra
	sub $sp, $sp, 16
	sw $s0, 0($sp)
	sw $t0, 4($sp)
	sw $t1, 8($sp)
	sw $t2, 12($sp)

	# Function Body starts here
	lw $t0,c
	lw $t1,d
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall
	# Function Body ends here

	# Restore Caller Activation Record from the stack
	lw $s0, 0($sp)
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	add $sp, $sp, 16
