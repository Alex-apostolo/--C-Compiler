
$$$ TEST 1, LINE 1: $$$

	.data

	.text
	.globl main

main:
	li $a0,53
	li $v0,17
	syscall

$$$ TEST 2, LINE 3: $$$

	.data

	.text
	.globl main

main:
	li $t0,2
	li $t1,3
	add $t2,$t0,$t1
	move $a0,$t2
	li $v0,17
	syscall

$$$ TEST 3, LINE 5: $$$

	.data

	.text
	.globl main

main:
	li $a0,15
	li $v0,17
	syscall

$$$ TEST 4, LINE 7: $$$

	.data
x:

	.text
	.globl main

main:
	li $t0,53
	sw $t0,x
	lw $t1,x
	li $t2,1
	add $t3,$t1,$t2
	move $a0,$t3
	li $v0,17
	syscall

$$$ TEST 5, LINE 9: $$$

	.data
x:

	.text
	.globl main

main:
	li $t0,1
	sw $t0,x
	lw $t1,x
	li $t2,32
	add $t3,$t1,$t2
	sw $t3,x
	lw $t0,x
	move $a0,$t0
	li $v0,17
	syscall

$$$ TEST 6, LINE 11: $$$

	.data
a: .word 2
d:
b:
c:

	.text
	.globl main

third:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	li $t0,3
	sw $t0,d
	lw $t1,a
	lw $t2,b
	add $t3,$t1,$t2
	lw $t4,c
	add $t5,$t3,$t4
	lw $t6,d
	add $t7,$t5,$t6
	move $a0,$t7
	li $v0,17
	syscall

main:

	# Push t registers
	add $sp, $sp, -4
	sw $t0, 0($sp)
	 # Jump instruction
	jal first

	move $a0,$t0
	li $v0,17
	syscall

first:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	li $t0,1
	sw $t0,b

	# Push t registers
	add $sp, $sp, -8
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	# Push locals
	add $sp, $sp, -4
	lw $t0, b
	sw $t0, 0($sp)
	 # Jump instruction
	jal second


	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	lw $t1, 8($fp)
	 # Jump instruction
	move $a0,$t1
	li $v0,17
	syscall

second:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	li $t0,2
	sw $t0,c

	# Push t registers
	add $sp, $sp, -8
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	# Push locals
	add $sp, $sp, -4
	lw $t0, c
	sw $t0, 0($sp)
	 # Jump instruction
	jal third


$$$ TEST 7, LINE 13: $$$

	.data
a: .word 2
b:
d:
c:

	.text
	.globl main

main:

	# Push t registers
	add $sp, $sp, -4
	sw $t0, 0($sp)
	 # Jump instruction
	jal first

	move $a0,$t0
	li $v0,17
	syscall

first:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	li $t0,1
	sw $t0,b

	# Push t registers
	add $sp, $sp, -8
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	# Push locals
	add $sp, $sp, -4
	lw $t0, b
	sw $t0, 0($sp)
	 # Jump instruction
	jal second


	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	lw $t1, 8($fp)
	 # Jump instruction
	move $a0,$t1
	li $v0,17
	syscall

third:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	li $t0,3
	sw $t0,d
	lw $t1,a
	lw $t2,b
	add $t3,$t1,$t2
	lw $t4,c
	add $t5,$t3,$t4
	lw $t6,d
	add $t7,$t5,$t6

	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	lw $t1, 8($fp)
	 # Jump instruction
	move $a0,$t7
	li $v0,17
	syscall

second:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	li $t0,2
	sw $t0,c

	# Push t registers
	add $sp, $sp, -8
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	# Push locals
	add $sp, $sp, -4
	lw $t0, c
	sw $t0, 0($sp)
	 # Jump instruction
	jal third


$$$ TEST 8, LINE 15: $$$

	.data

	.text
	.globl main

main:

	# Push t registers
	add $sp, $sp, -4
	sw $t0, 0($sp)
	 # Jump instruction
	jal func

	move $a0,$t0
	li $v0,17
	syscall

func:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1

	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	 # Jump instruction
	move $a0,$t2
	li $v0,17
	syscall

$$$ TEST 9, LINE 17: $$$

	.data

	.text
	.globl main

main:

	# Push t registers
	add $sp, $sp, -4
	sw $t0, 0($sp)
	 # Jump instruction
	jal func

	move $a0,$t0
	li $v0,17
	syscall

sum:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1

	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	 # Jump instruction
	move $a0,$t2
	li $v0,17
	syscall

func:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	lw $t0,c
	lw $t1,d
	add $t2,$t0,$t1

	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	 # Jump instruction
	move $a0,$t2
	li $v0,17
	syscall

$$$ TEST 10, LINE 19: $$$

	.data

	.text
	.globl main

main:

	# Push t registers
	add $sp, $sp, -4
	sw $t0, 0($sp)
	 # Jump instruction
	jal func

	move $a0,$t0
	li $v0,17
	syscall

sum:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	lw $t0,a
	lw $t1,b
	add $t2,$t0,$t1

	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	 # Jump instruction
	move $a0,$t2
	li $v0,17
	syscall

func:
	# Push $ra and old $fp
	add $sp, $sp, -8
	sw $ra, 0($sp)
	sw $fp, 4($sp)
	# New frame pointer
	add $fp, $sp, -8

	lw $t0,c
	lw $t1,d
	add $t2,$t0,$t1

	# Restore $ra
	lw $ra, -4($fp)
	# Restore t registers
	lw $t0, 4($fp)
	 # Jump instruction
	move $a0,$t2
	li $v0,17
	syscall
